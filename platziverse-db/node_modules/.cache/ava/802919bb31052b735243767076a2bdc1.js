'use strict';

const test = require('ava');

const sinon = require('sinon');

const proxyquire = require('proxyquire'); // const agentFixtures = require('./fixtures/agent');


const config = {
  logging() {}

};
let MetricStub = {
  belongsTo: sinon.spy
};
let AgentStub = null;
let db = null;
let sandbox = null;
test.beforeEach(async () => {
  sandbox = sinon.createSandbox();
  AgentStub = {
    hasMany: sandbox.spy()
  };
  const setupDatabase = proxyquire('../', {
    './models/agent': () => AgentStub,
    './models/metric': () => MetricStub
  });
  db = await setupDatabase(config);
});
test.afterEach(t => {
  sandbox && sandbox.restore();
});
test('Agent', t => {
  t.truthy(db.Agent, 'Agent service should exist');
});
test.serial('Setup', t => {
  t.true(AgentStub.hasMany.called, 'AgentModel.hasMany was executed');
  t.true(MetricStub.belongsTo.called, 'MetricModel.belongsTo was executed');
});
//# sourceMappingURL=/home/dipzo/DIPZO/node/avanzado/Platzi/Platziverse/platziverse-db/node_modules/.cache/ava/802919bb31052b735243767076a2bdc1.js.map