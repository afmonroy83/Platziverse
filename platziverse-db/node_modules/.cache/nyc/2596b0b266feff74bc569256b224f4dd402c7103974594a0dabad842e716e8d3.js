'use strict';var cov_22eo68qa69=function(){var path="/home/dipzo/DIPZO/node/avanzado/Platzi/Platziverse/platziverse-db/tests/agent-tests.js";var hash="c90ec71a3b73f4381bb4ccb10746f0ae7f8f8d8f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/dipzo/DIPZO/node/avanzado/Platzi/Platziverse/platziverse-db/tests/agent-tests.js",statementMap:{"0":{start:{line:3,column:13},end:{line:3,column:27}},"1":{start:{line:5,column:14},end:{line:5,column:30}},"2":{start:{line:7,column:19},end:{line:7,column:40}},"3":{start:{line:9,column:22},end:{line:9,column:49}},"4":{start:{line:11,column:13},end:{line:14,column:1}},"5":{start:{line:15,column:17},end:{line:17,column:1}},"6":{start:{line:18,column:13},end:{line:18,column:52}},"7":{start:{line:19,column:9},end:{line:19,column:10}},"8":{start:{line:20,column:16},end:{line:20,column:20}},"9":{start:{line:21,column:9},end:{line:21,column:13}},"10":{start:{line:22,column:14},end:{line:22,column:18}},"11":{start:{line:23,column:0},end:{line:36,column:3}},"12":{start:{line:24,column:2},end:{line:24,column:34}},"13":{start:{line:25,column:2},end:{line:27,column:4}},"14":{start:{line:29,column:2},end:{line:29,column:38}},"15":{start:{line:30,column:2},end:{line:30,column:83}},"16":{start:{line:31,column:24},end:{line:34,column:4}},"17":{start:{line:32,column:28},end:{line:32,column:37}},"18":{start:{line:33,column:29},end:{line:33,column:39}},"19":{start:{line:35,column:2},end:{line:35,column:35}},"20":{start:{line:37,column:0},end:{line:39,column:3}},"21":{start:{line:38,column:2},end:{line:38,column:31}},"22":{start:{line:40,column:0},end:{line:42,column:3}},"23":{start:{line:41,column:2},end:{line:41,column:51}},"24":{start:{line:43,column:0},end:{line:48,column:3}},"25":{start:{line:44,column:2},end:{line:44,column:70}},"26":{start:{line:45,column:2},end:{line:45,column:89}},"27":{start:{line:46,column:2},end:{line:46,column:76}},"28":{start:{line:47,column:2},end:{line:47,column:90}},"29":{start:{line:49,column:0},end:{line:55,column:3}},"30":{start:{line:50,column:14},end:{line:50,column:41}},"31":{start:{line:51,column:2},end:{line:51,column:74}},"32":{start:{line:52,column:2},end:{line:52,column:74}},"33":{start:{line:53,column:2},end:{line:53,column:91}},"34":{start:{line:54,column:2},end:{line:54,column:67}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:2},end:{line:12,column:3}},loc:{start:{line:12,column:12},end:{line:12,column:14}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:16},end:{line:23,column:17}},loc:{start:{line:23,column:28},end:{line:36,column:1}},line:23},"2":{name:"(anonymous_2)",decl:{start:{line:32,column:22},end:{line:32,column:23}},loc:{start:{line:32,column:28},end:{line:32,column:37}},line:32},"3":{name:"(anonymous_3)",decl:{start:{line:33,column:23},end:{line:33,column:24}},loc:{start:{line:33,column:29},end:{line:33,column:39}},line:33},"4":{name:"(anonymous_4)",decl:{start:{line:37,column:15},end:{line:37,column:16}},loc:{start:{line:37,column:21},end:{line:39,column:1}},line:37},"5":{name:"(anonymous_5)",decl:{start:{line:40,column:14},end:{line:40,column:15}},loc:{start:{line:40,column:19},end:{line:42,column:1}},line:40},"6":{name:"(anonymous_6)",decl:{start:{line:43,column:21},end:{line:43,column:22}},loc:{start:{line:43,column:26},end:{line:48,column:1}},line:43},"7":{name:"(anonymous_7)",decl:{start:{line:49,column:30},end:{line:49,column:31}},loc:{start:{line:49,column:41},end:{line:55,column:1}},line:49}},branchMap:{"0":{loc:{start:{line:38,column:2},end:{line:38,column:30}},type:"binary-expr",locations:[{start:{line:38,column:2},end:{line:38,column:9}},{start:{line:38,column:13},end:{line:38,column:30}}],line:38}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"c90ec71a3b73f4381bb4ccb10746f0ae7f8f8d8f"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const test=(cov_22eo68qa69.s[0]++,require('ava'));const sinon=(cov_22eo68qa69.s[1]++,require('sinon'));const proxyquire=(cov_22eo68qa69.s[2]++,require('proxyquire'));const agentFixtures=(cov_22eo68qa69.s[3]++,require('./fixtures/agent'));let config=(cov_22eo68qa69.s[4]++,{logging(){cov_22eo68qa69.f[0]++;}});let MetricStub=(cov_22eo68qa69.s[5]++,{belongsTo:sinon.spy()});let single=(cov_22eo68qa69.s[6]++,Object.assign({},agentFixtures.single));let id=(cov_22eo68qa69.s[7]++,1);let AgentStub=(cov_22eo68qa69.s[8]++,null);let db=(cov_22eo68qa69.s[9]++,null);let sandbox=(cov_22eo68qa69.s[10]++,null);cov_22eo68qa69.s[11]++;test.beforeEach(async()=>{cov_22eo68qa69.f[1]++;cov_22eo68qa69.s[12]++;sandbox=sinon.createSandbox();cov_22eo68qa69.s[13]++;AgentStub={hasMany:sandbox.spy()};//model findById Stub
cov_22eo68qa69.s[14]++;AgentStub.findById=sandbox.stub();cov_22eo68qa69.s[15]++;AgentStub.findById.withArgs(id).returns(Promise.resolve(agentFixtures.byId(id)));const setupDatabase=(cov_22eo68qa69.s[16]++,proxyquire('../',{'./models/agent':()=>{cov_22eo68qa69.f[2]++;cov_22eo68qa69.s[17]++;return AgentStub;},'./models/metric':()=>{cov_22eo68qa69.f[3]++;cov_22eo68qa69.s[18]++;return MetricStub;}}));cov_22eo68qa69.s[19]++;db=await setupDatabase(config);});cov_22eo68qa69.s[20]++;test.afterEach(()=>{cov_22eo68qa69.f[4]++;cov_22eo68qa69.s[21]++;(cov_22eo68qa69.b[0][0]++,sandbox)&&(cov_22eo68qa69.b[0][1]++,sandbox.restore());});cov_22eo68qa69.s[22]++;test('Agent',t=>{cov_22eo68qa69.f[5]++;cov_22eo68qa69.s[23]++;t.truthy(db.Agent,'Agent Service should exist');});cov_22eo68qa69.s[24]++;test.serial('Setup',t=>{cov_22eo68qa69.f[6]++;cov_22eo68qa69.s[25]++;t.true(AgentStub.hasMany.called,'AgentModel.hasMany was executed');cov_22eo68qa69.s[26]++;t.true(AgentStub.hasMany.calledWith(MetricStub),'Argument should be the MetricModel');cov_22eo68qa69.s[27]++;t.true(MetricStub.belongsTo.called,'MetricModel.belongsTo was executed');cov_22eo68qa69.s[28]++;t.true(MetricStub.belongsTo.calledWith(AgentStub),'Argument should be the AgentModel');});cov_22eo68qa69.s[29]++;test.serial('Agent#findById',async t=>{cov_22eo68qa69.f[7]++;let agent=(cov_22eo68qa69.s[30]++,await db.Agent.findById(id));cov_22eo68qa69.s[31]++;t.true(AgentStub.findById.called,'findById should be called on model');cov_22eo68qa69.s[32]++;t.true(AgentStub.findById.calledOnce,'findById should be called once');cov_22eo68qa69.s[33]++;t.true(AgentStub.findById.calledWith(id),'findById should be called with specified id');cov_22eo68qa69.s[34]++;t.deepEqual(agent,agentFixtures.byId(id),'should be the name');});//# sourceMappingURL=/home/dipzo/DIPZO/node/avanzado/Platzi/Platziverse/platziverse-db/node_modules/.cache/ava/dff043e69913cc14e65948d7b5e22510.js.map